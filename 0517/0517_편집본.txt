AD(administrative Distance) : 동일 목적지에 대하여 다양한 라우팅 프로토콜, static route 등의 경로가 있을 경우 어떤 방법을 라우팅 테이블에 배치할 것이지를 결정할 수 있는 신뢰도.

connected interface : 0   [선호도 높음]
static route        : 1
RIP                 : 120
OSPF                : 110
Unknown             : 255  [선호도 낮음]

 KT (10) -------- SK BB(1)

IP SLA(Service Level Agreement)
본사에서는 DNS(8.8.8.8) 에게 주기적으로 ping 을 보내고 응답이 돌아오지 않는다면 특정 default route 정보를 down 시킨다. 이렇게 되면 백업 경로가 라우팅 테이블에 작성되어 SECONDARY LINK 를 통해 인터넷 연결이 가능해 진다.
   ip sla 1
     icmp-echo 8.8.8.8 source-ip 192.168.0.1XX
   ip sla schedule 1 start-time now life forever
   track 1 ip sla 1 reachability
   exit
   ip route 0.0.0.0 0.0.0.0 192.168.0.1 track 1
   do show ip route static
   end
   access-list 99 permit 192.168.1.0 0.0.0.255
   access-list 99 permit 192.168.2.0 0.0.0.255
   ip nat inside so list 99 int fa2/0 overload
   ip nat inside so list 99 int fa1/0 overload
   int fa1/0
   ip nat outside
   int fa2/0
   ip nat outside
   int fa0/0
   ip nat inside
   int fa1/1
   ip nat inside

[지금까지 구성된 내용들]
[HQ]
track 1 ip sla 1 reachability  <---- 3
!
interface FastEthernet0/0
 ip address 10.10.10.1 255.255.255.0
 ip nat inside
!
interface FastEthernet1/0
 description "KT INTERNET"
 no ip nat outside
 ip address 192.168.8.3 255.255.255.0
 no sh
!
interface FastEthernet1/1
 ip address 192.168.1.2 255.255.255.0
 ip nat inside
 no sh
!
interface FastEthernet2/0
 description "SK BB INTERNET"
 ip address 192.168.0.1XX 255.255.255.0
 ip nat outside
 no sh
!
!
ip nat inside source list 99 interface FastEthernet2/0 overload
ip route 0.0.0.0 0.0.0.0 192.168.0.1 track 1   <---- 4
ip route 0.0.0.0 0.0.0.0 192.168.8.2 10
ip route 192.168.2.0 255.255.255.0 10.10.10.2
!
ip sla 1  <---1
 icmp-echo 8.8.8.8 source-ip 192.168.0.100
ip sla schedule 1 life forever start-time now  <---- 2
access-list 99 permit 192.168.1.0 0.0.0.255
access-list 99 permit 192.168.2.0 0.0.0.255


[BR1]
!
!
interface FastEthernet0/0
 ip address 10.10.10.2 255.255.255.0
 no sh
!
interface FastEthernet0/1
 ip address 192.168.2.2 255.255.255.0
 no sh
!
ip route 0.0.0.0 0.0.0.0 10.10.10.1
!

[테스트 해 보기]
모든 구성 완료후
CentOS1 에서 traceroute www.google.com 을 하면 192.168.1.2 -> 192.168.0.1 보인다.

이후 HQ 의 fa2/0 (SK BB) 을 shutdown
int fa2/0
  sh

-> 경로가 KT 로 변경된다.  확인은 show ip route static -> 0.0.0.0/0 via 192.168.8.2

이후 CentOS1 에서 traceroute www.google.com 을 하면 192.168.1.2 -> 192.168.8.2


네트워크, 서버, 데이터베이스, 스토리지 등의 인프라 자원은 항상 서비스가 제공될 수 있도록 가용성(고가용성)을 높여야 한다.
네트워크의경우 ISP 와의 연결에서는 IP SLA 를 이용하여 가용성을 높일 수 있다. 
내부자원들에 대한 가용성은 VRRP, HSRP 를 이용할 수 있다. (가상의 주소를 기본게이트웨이로 사용할 수 있다)

데이터베이스 -> database replication - > aws mult-az


web ->          web - was - database

bastion host(베스천호스트) : 클라우드 내부에 있는 자원(서버, 데이터베이스)에 접근할 수 있도록 공인주소를 할당하고 사설주소를 통해 내부 자원들에 접근할 수 있는 관리용 서버 

Router, Firewall 에서는 기본적인 보안을 위해 ACL 을 사용할 수 있다.
ACL(Access Control List) 은 번호나 이름으로 정책을 생성하고 생성된 정책을 이용하여 트래픽을 분류, 필터링 할 수 있는 기술

트래픽 분류, 필터링시 라우터(방화벽) 내부에 들어온 패킷의 어느부분을 살펴보느냐에 따라 standard ACL, extended ACL 로 구분할 수 있다.
일반적으로 ACL 은 L3,L4 를 담당한다.
(ACL은 aws 에서는 subnet 과 subnet 사이에서 네트워크 트래픽을 필터링한다)

standard ACL
- 패킷의 출발지IP 주소만을 보고 필터링한다.
- 번호를 사용한다면 일반적으로 1~99

    access-list 1 permit 192.168.1.0 0.0.0.255  (1.0 ~ 1.255)
    access-list 1 permit 1.1.1.1 0.0.0.0 (1.1.1.1 만 허용)
    (= access-list 1 permit host 1.1.1.1)

    access-list 1 deny 0.0.0.0 255.255.255.255 (0.0.0.0 ~ 255.255.255.255)
   (= access-list 1 deny any)

extended ACL
- 패킷의 출발지/목적지 L3,L4 를 모두 볼 수 있다. 
- 기능을 확장하여 데이터부분(str)까지 확인할 수 도 있다.
- 번호를 사용한다면 일반적으로 100~199

예1) access-list 111 permit tcp any host 2.2.2.2 eq 80
     access-list 111 permit ip any host 3.3.3.3
     access-list 111 deny icmp any host 4.4.4.4 echo 



ACL은 다음과 같은 rule 을 준수해야 한다.
1. ACL 은 top-down 방식이므로 위에서 부터 아래로 차례차례 적용된다.
   따라서 순서가 매우 중요하다.

예) 외부에서 유입되는 트래픽중 1.1.1.1 이 유해 트래픽을 보내고 있다. 이를 차단하고 나머지 모든 IP의 접근은 허용한다.

    1)  
    access-list 1 deny host 1.1.1.1
    access-list 1 permit any

    2)
    access-list 1 permit any
    access-list 1 deny host 1.1.1.1

2. 각 ACL 의 가장 아래에는 '모두 차단된다' 가 생략되어 있다.
   예) 외부에서 유입되는 트래픽 중 2.2.2.2 의 접근을 차단하라.
      access-list 1 deny host 2.2.2.2
      access-list 1 permit any
      access-list 1 deny any (생략되어 있음)


3. 작성된 ACL 은 인터페이스, NAT, virtual terminal 등에 적용해 주어야 활성화된다.
   
    access-list 1 permit host 2.2.2.2
    access-list 1 permit host 3.3.3.3
    !
    int fa0/1
      ip access-group 1 in

    인터페이스에 적용할 경우 inbound, outbound 별로 각각 1개의 acl group 을 적용할 수 있다. 






 



실습 시나리오1.
우리는 BR1 의 네트워크단위 보안설정을 하고자 한다.
외부에 있는 모든 사용자들은 192.168.2.200 으로 웹접속할 수 있다.
하지만 그외 나머지 모든 192.168.2.200 으로의 접속은 불가하다.
또한 192.168.2.200 을 제외한 나머지 모든 서버로의 접속은 모두 허용된다.
이를 만족하는 ACL 을 작성하고 이를 적용해 보자. 적용은 fa0/0 에 적용한다.

   access-list 111 permit tcp any host 192.168.2.200 eq 80
   access-list 111 deny ip any host 192.168.2.200
   access-list 111 permit ip any 192.168.2.0 0.0.0.255
   int fa0/0
   ip access-group 111 in

/200은 막아서 들어가지지 ㅇ낳느게 맞고 205로 들어가는게 맞는거


도쿄
ec2
클라우드의 가상서버클릭
왼쪽 보안그룹 메뉴
보안그룹생성
서버
설명에 permit ssh, http and https
인바운드 규칙에 규칙추가 사용자 지정에 ssh 선택
소스에 내 ip 
규칙추가 http 소스 anywhere ipv4
규칙추가 https 소스 anywhere

보안그룹생성 누르고 만들기

나가는건 다 나갈수 있음 아웃바운드는 모든 트래픽이 나갈수 있다 any로 












